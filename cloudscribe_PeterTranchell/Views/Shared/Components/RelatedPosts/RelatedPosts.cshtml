@*This overridden view is purely to wrap the list of links in a nav element, in an attempt to stop the words in the category list being indexed with the page.
    i.e. we don't want the keyword "bassoon" being indexed for a choral work just because it is on the page in the list of used categories.
    CF 2nd June 2019*@

@model cloudscribe.SimpleContent.Web.ViewModels.RecentPostsViewModel
@inject cloudscribe.SimpleContent.Models.IBlogRoutes blogRoutes
@using cloudscribe.SimpleContent.Web
@using cloudscribe.SimpleContent.Models
@using Microsoft.Extensions.Localization
@inject IStringLocalizer<SimpleContent> sr
@inject ISimpleContentThemeHelper themeHelper
@{
    var defaultImageUrl = ""; //you can specify a default image
    var themeSettings = themeHelper.GetThemeSettings();
}
@functions{
    public string GetUrl(IPost post)
    {
        if (Model.ProjectSettings.IncludePubDateInPostUrls)
        {
            return Url.RouteUrl(blogRoutes.PostWithDateRouteName, new { year = post.PubDate.Value.Year, month = post.PubDate.Value.Month.ToString("00"), day = post.PubDate.Value.Day.ToString("00"), slug = post.Slug });
        }
        return Url.RouteUrl(blogRoutes.PostWithoutDateRouteName, new { slug = post.Slug });
    }
}

@if (Model.Posts.Count > 0)
{
    <nav aria-labelledby="@sr["Related Posts"]">
    <h3 class="featured-posts"><i class="@themeSettings.Icons.RelatedPosts" aria-hidden="true"></i>&nbsp;@sr["Related Posts"]</h3>
    @foreach (var post in Model.Posts)
    {
        if (!post.PubDate.HasValue) { continue; }
        var imgUrl = Model.ExtractFirstImageUrl(post, Url, defaultImageUrl);
    <div class="media mb-1 robots-nocontent">
        @*robots-nocontent class may help deter search engines fron indexing this section*@
        @if (!string.IsNullOrWhiteSpace(imgUrl))
        {
            <a class="pull-left" href="@GetUrl(post)"><img class="media-object" src="@imgUrl" width="100" alt="@post.Title"></a>
        }
        <div class="media-body pl-1">
            <h4 class="media-heading">
                <a href="@GetUrl(post)">@post.Title</a>
            </h4>
            <small>@Model.FormatDate(post.PubDate.Value)</small>
        </div>
    </div>
    }
    </nav>
}
